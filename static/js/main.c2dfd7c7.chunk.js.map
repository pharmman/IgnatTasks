{"version":3,"sources":["p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h9/Clock.module.css","p2-homeworks/h10/HW10.module.css","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css"],"names":["module","exports","homeWorkReducer","state","action","type","payload","side","sort","a","b","name","filter","e","age","sortByNameAC","SuperButton","red","className","restProps","finalClassName","s","default","initialPeople","_id","HW8","useState","people","setPeople","finalPeople","map","p","key","onClick","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","stop","clearInterval","onMouseEnter","onMouseLeave","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","styles","clock","id","window","setInterval","HW9","initState","loading","loadingAC","HW10","dispatch","useDispatch","useSelector","water","setTimeout","console","log","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c2dfd7c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1djBs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"Clock_clock__2svUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"water\":\"HW10_water__VpkPo\",\"wave\":\"HW10_wave__340Ly\"};","import {PersonType} from '../HW8';\r\n\r\nexport const homeWorkReducer = (state: PersonType[], action: ActionsType): PersonType[] => {\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            if (action.payload.side === 'up') {\r\n                state.sort((a, b) => a.name > b.name ? 1 : -1)\r\n            }\r\n            if (action.payload.side === 'down')\r\n                state.sort((a, b) => a.name < b.name ? 1 : -1)\r\n            return [...state]\r\n        }\r\n        case 'check': {\r\n            return [...state.filter((e) => e.age > action.payload.age)]\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const sortByNameAC = (side: string): SortByNameType => {\r\n    return {\r\n        type: 'sort',\r\n        payload: {\r\n            side\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkAgeAC = (age: number): SortByAgeType => {\r\n    return {\r\n        type: 'check',\r\n        payload: {\r\n            age\r\n        }\r\n    }\r\n}\r\n\r\ntype SortByNameType = {\r\n    type: 'sort'\r\n    payload: {\r\n        side: string\r\n    }\r\n\r\n}\r\n\r\ntype SortByAgeType = {\r\n    type: 'check'\r\n    payload: {\r\n        age: number\r\n    }\r\n}\r\n\r\ntype ActionsType = SortByNameType | SortByAgeType","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './SuperButton.module.css';\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default } ${className}`;\r\n\r\n    return (\r\n        <button className={finalClassName}\r\n                {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {useState} from 'react';\r\nimport {homeWorkReducer, checkAgeAC, sortByNameAC} from './bll/homeWorkReducer';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\nexport type PersonType = {\r\n    _id: number,\r\n    name: string,\r\n    age: number\r\n}\r\n\r\nconst initialPeople: PersonType[] = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState(initialPeople);\r\n\r\n    const finalPeople = people.map(p => (\r\n        <div key={p._id}>\r\n            {p.name}, {p.age}\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, sortByNameAC('up')))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, sortByNameAC('down')))\r\n    const checkAge = () => setPeople(homeWorkReducer(initialPeople, checkAgeAC(18)))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            {finalPeople}\r\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n            <div><SuperButton onClick={checkAge}>check 18</SuperButton></div>\r\n\r\n\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW8;\r\n","import React, {useState} from 'react';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport styles from './Clock.module.css'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0);\r\n    const [date, setDate] = useState<Date>(new Date());\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop();\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n        setTimerId(id);\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    };\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    };\r\n\r\n    const stringTime = date.toLocaleTimeString('ru-Ru'); // fix with date\r\n    const stringDate = date.toLocaleDateString('ru-Ru'); // fix with date\r\n\r\n    return (\r\n        <div className={styles.clock}>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div onMouseEnter={onMouseEnter}\r\n                     onMouseLeave={onMouseLeave}>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW9;\r\n","export type StateType = {\r\n    loading: any\r\n}\r\n\r\nconst initState:StateType = {\r\n loading: false\r\n};\r\n\r\nexport const loadingReducer = (state = initState, action:loadingACType): StateType => { // fix any\r\n    switch (action.type) {\r\n        case \"loading\":\r\n            return {...state, ...action.payload}\r\n        default: return state;\r\n    }\r\n};\r\n\r\ntype loadingACType = {\r\n    type: 'loading'\r\n    payload:{\r\n        loading: boolean\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const loadingAC = (loading:boolean): loadingACType => ({type: 'loading', payload: {loading}});","import React from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from './bll/store';\r\nimport {loadingAC, StateType} from './bll/loadingReducer';\r\nimport styles from './HW10.module.css'\r\n\r\nfunction HW10() {\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector<AppStoreType, StateType>(state => state.loading)\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true))\r\n        setTimeout(() => {\r\n            dispatch(loadingAC(false))\r\n        }, 2000)\r\n        console.log(\"loading...\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div className={styles.water}></div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW10;\r\n","import React from 'react';\r\nimport s from './App.module.css';\r\nimport HW8 from '../../../p2-homeworks/h8/HW8';\r\nimport HW9 from '../../../p2-homeworks/h9/HW9';\r\nimport HW10 from '../../../p2-homeworks/h10/HW10';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>\r\n            <HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n            {/*    <HW6/>*/}\r\n            {/*    <HW7/>*/}\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {loadingReducer} from \"./loadingReducer\";\r\nimport {combineReducers, createStore} from 'redux';\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n\r\n });\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\n window.store = store; // for dev\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {Provider} from 'react-redux';\r\nimport store from './p2-homeworks/h10/bll/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__71ClM\",\"red\":\"SuperButton_red__3eblg\"};"],"sourceRoot":""}